<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sass on JackYu | CodeDogFish</title>
    <link>http://jackyu.io/categories/sass/</link>
    <description>Recent content in Sass on JackYu | CodeDogFish</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jul 2015 18:13:40 +0800</lastBuildDate>
    <atom:link href="http://jackyu.io/categories/sass/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>mixins</title>
      <link>http://jackyu.io/post/sass/mixins/</link>
      <pubDate>Tue, 14 Jul 2015 18:13:40 +0800</pubDate>
      
      <guid>http://jackyu.io/post/sass/mixins/</guid>
      <description>

&lt;h2 id=&#34;dry-ing-out-your-sass-mixins:6f5ca7a4a7a75c974d750a8fe363c304&#34;&gt;DRY-ing Out Your Sass Mixins&lt;/h2&gt;

&lt;h4 id=&#34;one-of-the-most-powerful-features-of-the-css-preprocessor-sass-is-the-mixin-an-abstraction-of-a-common-pattern-into-a-semantic-and-reusable-chunk-think-of-taking-the-styles-for-a-button-and-instead-of-needing-to-remember-what-all-of-the-properties-are-having-a-selector-include-the-styles-for-the-button-instead-the-button-styles-are-maintained-in-a-single-place-making-them-easy-to-update-and-keep-consistent:6f5ca7a4a7a75c974d750a8fe363c304&#34;&gt;One of the most powerful features of the CSS preprocessor Sass is the mixin, an abstraction of a common pattern into a semantic and reusable chunk. Think of taking the styles for a button and, instead of needing to remember what all of the properties are, having a selector include the styles for the button instead. The button styles are maintained in a single place, making them easy to update and keep consistent.&lt;/h4&gt;

&lt;h4 id=&#34;css预处理器sass最有用的特性之一就是混合-mixin-它是对代码块的语义化和重用的一种较为通常的抽象模式-比如去思考如何使用一个按钮的样式-而不是去记住这种样式的所有具体属性-然后让选择器去包括所有这些具体属性-按钮的样式仅在一处维护-使得更新简单-也更容易保证一致性:6f5ca7a4a7a75c974d750a8fe363c304&#34;&gt;CSS预处理器SASS最有用的特性之一就是混合（Mixin）,它是对代码块的语义化和重用的一种较为通常的抽象模式。比如去思考如何使用一个按钮的样式，而不是去记住这种样式的所有具体属性，然后让选择器去包括所有这些具体属性。按钮的样式仅在一处维护，使得更新简单，也更容易保证一致性。&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://alistapart.com/article/dry-ing-out-your-sass-mixins&#34;&gt;http://alistapart.com/article/dry-ing-out-your-sass-mixins&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>